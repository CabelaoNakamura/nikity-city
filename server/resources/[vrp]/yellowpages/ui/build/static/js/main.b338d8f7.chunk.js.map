{ "version": 3, "sources": ["App.tsx", "index.tsx"], "names": ["library", "add", "faPhone", "faUserAlt", "faTrash", "faStickyNote", "ColorButton", "withStyles", "theme", "root", "color", "Button", "App", "useState", "open", "setOpen", "del", "setDelete", "data", "setData", "handleEvent", "e", "undefined", "action", "fetch", "headers", "method", "body", "JSON", "stringify", "then", "res", "json", "cb", "document", "getElementById", "style", "display", "catch", "err", "console", "log", "useEffect", "window", "addEventListener", "removeEventListener", "onkeyup", "which", "Grid", "id", "className", "map", "ad", "Paper", "elevation", "square", "Typography", "variant", "text", "Tooltip", "title", "phone", "onClick", "num", "number", "aria-label", "icon", "name", "startIcon", "Dialog", "onClose", "aria-labelledby", "aria-describedby", "container", "position", "BackdropProps", "DialogContent", "TextField", "autoFocus", "margin", "type", "fullWidth", "DialogActions", "justifyContent", "padding", "value", "addPost", "render"], "mappings": "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", "file": "static/js/main.b338d8f7.chunk.js", "sourcesContent": ["import React, { useState, useEffect } from 'react';\r\nimport './AppStyles.css';\r\n\r\nimport { Grid,Typography,Tooltip,Button,Dialog,DialogActions,DialogContent,TextField,Paper  } from '@material-ui/core';\r\nimport { withStyles,Theme } from '@material-ui/core/styles';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPhone,faUserAlt,faTrash,faStickyNote } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nlibrary.add(faPhone,faUserAlt,faTrash,faStickyNote);\r\n\r\nconst ColorButton = withStyles((theme :Theme) => ({\r\n    root: {\r\n        color: \"#FFD400\"\r\n    },\r\n}))(Button);\r\n\r\nexport default function App() {\r\n    const [open,setOpen] = useState<boolean>(false);\r\n    const [del,setDelete] = useState<boolean>(false);\r\n    const [data,setData] = useState<any[]>([]);\r\n\r\n    const handleEvent = (e:any) => {\r\n        if (e !== undefined) {\r\n            if (e.data.action === 'show') {\r\n                fetch(\"http://yellowpages/GetPosts\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({})\r\n                })\r\n                .then(res => res.json())\r\n                .then(cb => {\r\n                    setData(cb);\r\n                    setDelete(false);\r\n                    (document.getElementById(\"App\") as HTMLInputElement).style.display = \"block\";\r\n                })\r\n                .catch(err => console.log(err));\r\n            } else if (e.data.action === 'update') {\r\n                fetch(\"http://yellowpages/GetPosts\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({})\r\n                })\r\n                .then(res => res.json())\r\n                .then(cb => {\r\n                    setData(cb);\r\n                    setDelete(false);\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"message\", handleEvent);\r\n        return () => {\r\n            window.removeEventListener(\"message\", handleEvent);\r\n        }\r\n    }, [setData])\r\n    \r\n    window.onkeyup = function(data :any){\r\n        if (data.which === 27){\r\n            (document.getElementById(\"App\") as HTMLInputElement).style.display = \"none\";\r\n            fetch(\"http://yellowpages/CloseApp\", {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({})\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    };\r\n\r\n    const addPost = () => {\r\n        const text:string = (document.getElementById(\"idText\") as HTMLInputElement).value;\r\n\r\n        fetch(\"http://yellowpages/AddPost\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ text: text })\r\n        })\r\n        .then(res => res.json())\r\n        .then(cb => {\r\n            setData(cb);\r\n            setOpen(false);\r\n            setDelete(false);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const callNumber = (num :string) => {\r\n        (document.getElementById(\"App\") as HTMLInputElement).style.display = \"none\";\r\n        fetch(\"http://yellowpages/CallAd\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ number: num })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const deletePost = () => {\r\n        if (del === false) {\r\n            fetch(\"http://yellowpages/AddPost\", {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({ text: \"\" })\r\n            })\r\n            .then(res => res.json())\r\n            .then(cb => {\r\n                setDelete(true);\r\n                setData(cb);\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Grid id=\"App\">\r\n        <div className=\"yp-box\">\r\n            {data.map(ad => (\r\n                <Paper className=\"yp-ad\" elevation={3} square={true}>\r\n                <Typography variant=\"subtitle2\" className=\"yp-text\">{ad.text}</Typography>\r\n                <div className=\"yp-info\">\r\n                    <Tooltip title={ad.phone}>\r\n                        <Typography onClick={() => callNumber(ad.phone)} aria-label=\"call\" variant=\"body2\" className=\"yp-phone\"><FontAwesomeIcon icon=\"phone\"/>{ad.phone}</Typography>\r\n                    </Tooltip>\r\n                    <Tooltip title={ad.name}>\r\n                        <Typography aria-label=\"name\" variant=\"body2\" className=\"yp-name\"><FontAwesomeIcon icon=\"user-alt\"/>{ad.name}</Typography>\r\n                    </Tooltip>\r\n                </div>\r\n            </Paper>\r\n            ))}\r\n        </div>\r\n        <div className=\"yp-buttons\">\r\n            <Button onClick={() => deletePost()} color=\"secondary\" startIcon={<FontAwesomeIcon icon=\"trash\"/>}>Deletar</Button>\r\n            <ColorButton onClick={() => setOpen(true)} startIcon={<FontAwesomeIcon icon=\"sticky-note\"/>}>Novo Post</ColorButton>\r\n        </div>\r\n\r\n        <Dialog\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            container={() => document.getElementById(\"App\")}\r\n            style={{position: 'absolute'}}\r\n            BackdropProps={{ style: { position: 'absolute' } }}\r\n        >\r\n            <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"idText\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions style={{justifyContent: 'space-between', padding: '8px 16px'}}>\r\n                <Button onClick={() => setOpen(false)} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button onClick={() => addPost()} color=\"primary\">\r\n                    Postar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </Grid>\r\n  );\r\n}\r\n", "import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\nimport 'normalize.css';\r\n\r\nrender(<App />,document.getElementById('root'));"], "sourceRoot": "" }