{"version":3,"sources":["components/Landing/index.js","components/Chars/index.js","App.js","index.js"],"names":["Landing","Container","className","maxWidth","Typography","variant","CircularProgress","Chars","props","useState","openCreate","sex","openDelete","selected","values","setValues","name","setName","name2","setName2","handleOpenCreate","v","handleCloseCreate","handleCloseDelete","map","e","undefined","chars","Card","elevation","CardContent","id","phone","Intl","NumberFormat","style","currency","format","bank","registration","Divider","CardActions","Button","fullWidth","color","onClick","handleOpenDelete","play","handlePlay","Dialog","PaperProps","square","open","onClose","onSubmit","preventDefault","submit","DialogTitle","DialogContent","TextField","margin","label","type","inputProps","maxLength","value","onChange","target","required","select","display","MenuItem","key","DialogActions","disabled","DialogContentText","delete","App","page","setPage","setChars","handleEvent","data","action","document","getElementById","fetch","headers","method","body","JSON","stringify","then","res","json","cb","useEffect","window","addEventListener","removeEventListener","slot","render"],"mappings":"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","file":"static/js/main.8d868e82.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.scss';\r\n\r\n// Material\r\nimport { Container, Typography, CircularProgress } from '@material-ui/core';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Container className=\"landingContainer\" maxWidth={false}>\r\n      <div className=\"container\">\r\n        <div className=\"text-box\">\r\n          <Typography variant=\"h4\">\r\n            Bem-vindo ao Creative Roleplay\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            Estamos carregando seus dados\r\n          </Typography>\r\n        </div>\r\n\r\n        <CircularProgress className=\"spinner\" />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Landing;","import React, { useState } from 'react';\r\nimport './styles.scss';\r\n\r\n// Material\r\nimport { \r\n  Typography, Button, Container, Card, MenuItem,\r\n  CardActions, CardContent, Divider, Dialog, DialogTitle,\r\n  DialogContent, DialogActions, TextField, DialogContentText\r\n} from '@material-ui/core';\r\n\r\nconst Chars = (props) => {\r\n  const genders = [\r\n    {\r\n      value: \"M\",\r\n      display: \"Masculino\"\r\n    },\r\n    {\r\n      value: \"F\",\r\n      display: \"Feminino\"\r\n    }\r\n  ];\r\n\r\n  const [values, setValues] = useState({\r\n    openCreate: false,\r\n    sex: \"\",\r\n    openDelete: \"\",\r\n    selected: null,\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [name2, setName2] = useState(\"\");\r\n\r\n  // Functions (Create)\r\n  const handleOpenCreate = () => {\r\n    setValues(v => {\r\n      return {...v, openCreate: true}\r\n    });\r\n  }\r\n  const handleCloseCreate = () => {\r\n    setValues(v => {\r\n      return {...v,\r\n        openCreate: false,\r\n        sex: \"\",\r\n      }\r\n    });\r\n    setName(\"\");\r\n    setName2(\"\");\r\n  }\r\n\r\n  // Functions (Delete)\r\n  const handleOpenDelete = e => {\r\n    setValues(v => {\r\n      return {...v,\r\n        openDelete: true,\r\n        selected: e\r\n      }\r\n    });\r\n  }\r\n  const handleCloseDelete = () => {\r\n    setValues(v => {\r\n      return {...v, openDelete: false }\r\n    });\r\n  }\r\n\r\n  const handlePlay = e => props.play(e);\r\n  const handleDelete = () => {\r\n    if (values.selected !== null)\r\n      props.delete(values.selected);\r\n\r\n    setValues(v => {\r\n      return {...v, openDelete: false }\r\n    });\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.submit(name, name2, values.sex);\r\n    setValues(v => {\r\n      return {...v,\r\n        openCreate: false,\r\n        sex: \"\",\r\n      }\r\n    });\r\n    setName(\"\");\r\n    setName2(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <Container maxWidth={false} className=\"container\">\r\n        {[0,1,2,3].map(e => (\r\n          props.chars[e] !== undefined ? (\r\n            <Card elevation={3} className=\"card\">\r\n              <CardContent className=\"content\">\r\n                <Typography variant=\"subtitle1\" className=\"text titleText\">\r\n                  {`#${props.chars[e].id} ${props.chars[e].name} ${props.chars[e].name2}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"text bodyText\">\r\n                  {`Telefone: ${props.chars[e].phone}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"text bodyText\">\r\n                  {`Banco: ${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(props.chars[e].bank)}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"text bodyText\">\r\n                  {`RG: ${props.chars[e].registration}`}\r\n                </Typography>\r\n              </CardContent>\r\n              <Divider />\r\n              <CardActions className=\"actions\">\r\n                <Button variant=\"contained\" fullWidth className=\"buttons\" color=\"secondary\" onClick={() => handleOpenDelete(e)}>Deletar</Button>\r\n                <Button variant=\"contained\" fullWidth className=\"buttons\" color=\"primary\" onClick={() => handlePlay(e)}>Entrar</Button>\r\n              </CardActions>\r\n            </Card>\r\n          ) : (\r\n            <Card elevation={3} className=\"card empty\" onClick={handleOpenCreate}>\r\n              <CardContent className=\"content\">\r\n                <Typography variant=\"subtitle1\" className=\"text titleText\">\r\n                  +\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"text bodyText\">\r\n                  Criar Personagem\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          )\r\n        ))}\r\n      </Container>\r\n\r\n      <Dialog PaperProps={{square: true}} open={values.openCreate} onClose={handleCloseCreate}>\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogTitle>Criando Novo Personagem</DialogTitle>\r\n          <Divider />\r\n          <DialogContent>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Nome\"\r\n              type=\"text\"\r\n              inputProps={{ maxLength: 15 }}\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Sobrenome\"\r\n              type=\"text\"\r\n              inputProps={{ maxLength: 15 }}\r\n              value={name2}\r\n              onChange={e => setName2(e.target.value)}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Gênero\"\r\n              type=\"text\"\r\n              value={values.sex}\r\n              onChange={e => setValues(v => { return {...v, sex: e.target.value} })}\r\n              select\r\n              required\r\n              fullWidth\r\n            >\r\n              {genders.map(e => (\r\n                <MenuItem key={e.value} value={e.value}>\r\n                  {e.display}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </DialogContent>\r\n          <DialogActions className=\"dialogActions\">\r\n            <Button onClick={handleCloseCreate} color=\"secondary\">\r\n              Cancelar\r\n            </Button>\r\n            <Button disabled={name === \"\" || name2 === \"\" || values.sex === \"\"} type=\"submit\" color=\"primary\">\r\n              Confirmar\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Dialog PaperProps={{square: true}} open={values.openDelete} onClose={handleCloseDelete}>\r\n        <DialogTitle>Deletando Personagem</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Tem certeza que quer deletar o personagem? Essa ação é irreversível.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"dialogActions\">\r\n          <Button onClick={handleCloseDelete} color=\"secondary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"secondary\">\r\n            Deletar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chars;","import React, { useState, useEffect } from 'react';\r\n\r\n// Components\r\nimport Landing from './components/Landing';\r\nimport Chars from './components/Chars';\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState(false);\r\n  const [chars, setChars] = useState([]);\r\n\r\n  const handleSubmit = (name, name2, sex) => {\r\n    document.getElementById(\"App\").style.display = \"none\";\r\n    fetch(\"http://spawn/CharacterCreated\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: name,\r\n        name2: name2,\r\n        sex: sex\r\n      })\r\n    });\r\n  }\r\n  const handlePlay = (slot) => {       \r\n    document.getElementById(\"App\").style.display = \"none\";\r\n    fetch(\"http://spawn/CharacterChosen\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        id: chars[slot].id\r\n      })\r\n    });\r\n  }\r\n  const handleDelete = (slot) => {\r\n    setPage(false);\r\n    fetch(\"http://spawn/DeleteCharacter\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        id: chars[slot].id\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(cb => {\r\n      setChars(cb);\r\n      setPage(true);\r\n    });\r\n  }\r\n\r\n  const handleEvent = (e) => {\r\n    if (e !== undefined) {\r\n      if (e.data.action === 'show') {\r\n        document.getElementById(\"App\").style.display = \"block\";\r\n        fetch(\"http://spawn/GetCharacters\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({})\r\n        })\r\n        .then(res => res.json())\r\n        .then(cb => {\r\n          setChars(cb);\r\n          setPage(true);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"message\", handleEvent);\r\n    return () => { window.removeEventListener(\"message\", handleEvent); }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"App\" style={{display: \"none\"}}>\r\n      {!page && ( <Landing /> ) }\r\n      {page && ( <Chars delete={handleDelete} submit={handleSubmit} play={handlePlay} chars={chars} /> ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\n// Normalize\r\nimport 'normalize.css';\r\n\r\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}