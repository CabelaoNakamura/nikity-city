-----------------------------------------------------------------------------------------------------------------------------------------
-- VRP
-----------------------------------------------------------------------------------------------------------------------------------------
local Tunnel = module("vrp","lib/Tunnel")
local Proxy = module("vrp","lib/Proxy")
vRP = Proxy.getInterface("vRP")
-----------------------------------------------------------------------------------------------------------------------------------------
-- CONNECTION
-----------------------------------------------------------------------------------------------------------------------------------------
cnVRP = {}
Tunnel.bindInterface("vrp_goldminer",cnVRP)
vCLIENT = Tunnel.getInterface("vrp_goldminer")
-----------------------------------------------------------------------------------------------------------------------------------------
-- VARIABLES
-----------------------------------------------------------------------------------------------------------------------------------------
local saveList = {}
local goldminerList = {}
-----------------------------------------------------------------------------------------------------------------------------------------
-- VARIABLES
-----------------------------------------------------------------------------------------------------------------------------------------
function goldminerMakeList(status)
	goldminerList = {
		[1] = { 2959.34,2821.02,42.97,207.79 },
		[2] = { 2958.46,2818.48,42.92,333.51 },
		[3] = { 2960.2,2819.37,43.35,62.38 },
		[4] = { 2955.12,2819.48,42.46,300.66 },
		[5] = { 2956.4,2821.2,42.7,138.73 },
		[6] = { 2951.88,2816.7,42.27,110.67 },
		[7] = { 2950.08,2817.3,42.34,201.05 },
		[8] = { 2950.69,2815.79,42.19,337.33 },
		[9] = { 2948.79,2819.29,42.64,22.68 },
		[10] = { 2949.29,2821.56,43.27,128.58 },
		[11] = { 2946.88,2821.44,43.2,228.38 },
		[12] = { 2944.84,2820.99,43.14,176.89 },
		[13] = { 2943.31,2820.05,43.23,234.92 },
		[14] = { 2943.52,2817.93,42.9,307.27 },
		[15] = { 2945.24,2817.76,42.69,51.78 },
		[16] = { 2939.49,2813.43,42.79,120.29 },
		[17] = { 2938.94,2811.59,42.55,29.96 },
		[18] = { 2937.29,2812.44,42.91,322.44 },
		[19] = { 2935.58,2813.74,43.46,271.13 },
		[20] = { 2937.0,2815.3,43.62,175.69 },
		[21] = { 2938.02,2814.41,43.25,133.37 },
		[22] = { 2932.31,2816.12,44.66,67.05 },
		[23] = { 2931.84,2817.98,45.53,134.75 },
		[24] = { 2930.05,2817.49,45.72,271.71 },
		[25] = { 2930.48,2815.91,44.93,317.28 },
		[26] = { 2927.48,2813.27,44.6,81.7 },
		[27] = { 2925.67,2814.11,45.18,179.92 },
		[28] = { 2925.58,2812.85,44.59,320.79 },
		[29] = { 2921.98,2801.17,41.65,173.78 },
		[30] = { 2922.47,2799.64,41.34,81.01 },
		[31] = { 2921.98,2797.57,41.04,50.48 },
		[32] = { 2920.27,2797.82,41.04,292.54 },
		[33] = { 2918.93,2799.56,41.19,36.57 },
		[34] = { 2917.44,2800.16,41.18,249.02 },
		[35] = { 2918.87,2801.24,41.61,128.44 },
		[36] = { 2920.27,2800.41,41.46,223.6 },
		[37] = { 2924.59,2796.15,40.88,274.1 },
		[38] = { 2925.74,2797.08,41.03,169.92 },
		[39] = { 2926.69,2796.05,40.88,80.87 },
		[40] = { 2926.42,2794.8,40.75,93.56 },
		[41] = { 2927.0,2793.43,40.61,160.69 },
		[42] = { 2924.74,2792.62,40.61,266.5 },
		[43] = { 2925.96,2791.11,40.41,341.36 },
		[44] = { 2926.87,2790.01,40.2,262.49 },
		[45] = { 2927.66,2788.09,39.86,320.77 },
		[46] = { 2929.21,2788.72,39.92,87.96 },
		[47] = { 2930.16,2787.68,39.72,257.78 },
		[48] = { 2929.93,2785.96,39.44,302.34 },
		[49] = { 2931.49,2786.1,39.5,37.88 },
		[50] = { 2934.13,2785.07,39.52,197.4 },
		[51] = { 2933.97,2783.7,39.37,307.2 },
		[52] = { 2935.76,2784.54,39.55,103.22 },
		[53] = { 2936.67,2774.87,39.15,198.62 },
		[54] = { 2938.02,2775.08,39.24,192.98 },
		[55] = { 2939.34,2774.64,39.26,91.14 },
		[56] = { 2938.73,2773.41,39.27,355.49 },
		[57] = { 2936.93,2773.62,39.21,350.63 },
		[58] = { 2936.47,2771.87,39.35,245.57 },
		[59] = { 2937.49,2770.65,38.97,356.67 },
		[60] = { 2938.69,2771.75,39.25,75.35 },
		[61] = { 2938.92,2770.18,39.14,211.99 },
		[62] = { 2940.29,2771.06,39.5,169.61 },
		[63] = { 2940.67,2769.58,39.54,77.61 },
		[64] = { 2938.87,2767.98,39.64,359.22 },
		[65] = { 2937.87,2768.97,39.22,296.25 },
		[66] = { 2928.13,2766.92,43.97,346.82 },
		[67] = { 2927.84,2768.7,43.79,204.33 },
		[68] = { 2927.56,2765.9,44.35,214.47 },
		[69] = { 2928.95,2764.34,44.24,354.78 },
		[70] = { 2927.23,2765.13,44.65,286.64 },
		[71] = { 2930.12,2765.9,43.78,124.26 },
		[72] = { 2929.32,2767.86,43.24,109.8 },
		[73] = { 2928.82,2766.72,43.8,177.88 },
		[74] = { 2930.23,2764.82,44.04,68.71 },
		[75] = { 2930.82,2763.49,44.26,144.72 },
		[76] = { 2932.27,2762.08,44.57,95.88 },
		[77] = { 2931.03,2760.68,44.77,353.18 },
		[78] = { 2929.68,2762.14,44.53,284.06 },
		[79] = { 2936.55,2757.97,44.27,209.85 },
		[80] = { 2936.65,2756.51,44.06,318.05 },
		[81] = { 2938.34,2756.7,43.91,72.91 },
		[82] = { 2938.1,2757.7,44.02,130.27 },
		[83] = { 2941.95,2759.85,42.37,145.06 },
		[84] = { 2941.47,2761.23,41.83,195.33 },
		[85] = { 2942.97,2761.07,41.9,129.77 },
		[86] = { 2942.99,2759.63,42.37,19.94 },
		[87] = { 2942.56,2756.5,42.97,270.11 },
		[88] = { 2943.82,2757.25,42.84,141.94 },
		[89] = { 2944.09,2755.73,43.0,42.41 },
		[90] = { 2946.64,2755.75,43.04,188.58 },
		[91] = { 2948.31,2755.15,43.22,122.21 },
		[92] = { 2939.65,2747.71,43.2,219.8 },
		[93] = { 2938.67,2746.99,43.19,260.94 },
		[94] = { 2938.56,2745.92,43.19,307.89 },
		[95] = { 2940.13,2745.25,43.23,17.46 },
		[96] = { 2941.28,2746.32,43.22,93.45 },
		[97] = { 2941.06,2747.53,43.22,119.61 },
		[98] = { 2937.71,2772.63,39.25,124.18 },
		[99] = { 2935.49,2783.45,39.43,52.29 },
		[100] = { 2928.86,2790.63,40.21,121.23 }
	}

	saveList = goldminerList
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREADINITIAL
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	goldminerMakeList(false)
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREADTIMERS
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	while true do
		Citizen.Wait(120*60000)
		goldminerMakeList(true)
		Citizen.Wait(1000)
		TriggerClientEvent("vrp_goldminer:insertBlips",-1,saveList)
		TriggerClientEvent("vrp_goldminer:updateGoldminerList",-1,saveList)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- GARBAGEMAN
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterCommand("minerador",function(source,args,rawCommand)
	local user_id = vRP.getUserId(source)
	if user_id then
		local inService = vCLIENT.getGoldminerStatus(source)
		if inService then
			vCLIENT.stopGoldminer(source)
			TriggerClientEvent("Notify",source,"job-garbageman3","<div style='opacity: 0.7;'><i>Aviso de Trabalho</i></div>Você encerrou o seu turno de <b>minerador</b>.",5000)
			TriggerClientEvent("vrp_sound:source",source,"juntos",0.5)
		else
			vCLIENT.startGoldminer(source)
			TriggerClientEvent("vrp_goldminer:insertBlips",source,saveList)
			TriggerClientEvent("vrp_goldminer:updateGoldminerList",source,saveList)
			TriggerClientEvent("Notify",source,"job-garbageman2","<div style='opacity: 0.7;'><i>Aviso de Trabalho</i></div>Você iniciou o seu turno de <b>minerador</b> com sucesso.",5000)
			TriggerClientEvent("vrp_sound:source",source,"quite",0.5)
		end
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- PAYMENTMETHOD
-----------------------------------------------------------------------------------------------------------------------------------------
function cnVRP.paymentMethod(goldminerId)
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.computeInvWeight(user_id) + 1 > vRP.getBackpack(user_id) then
			TriggerClientEvent("Notify",source,"negado","A sua Mochila está cheia.",5000)
			TriggerClientEvent("vrp_sound:source",source,"when",0.5)
			return
		end
		
		local random = math.random(80)
		if parseInt(random) >= 80 then
			vRP.giveInventoryItem(user_id,"ouro",math.random(1),true)
		elseif parseInt(random) >= 71 and parseInt(random) <= 80 then
			vRP.giveInventoryItem(user_id,"ferro",math.random(5),true)
		elseif parseInt(random) >= 61 and parseInt(random) <= 70 then
			vRP.giveInventoryItem(user_id,"bronze",math.random(3),true)
		elseif parseInt(random) >= 51 and parseInt(random) <= 60 then
			vRP.giveInventoryItem(user_id,"esmeralda",math.random(2),true)
		elseif parseInt(random) >= 41 and parseInt(random) <= 50 then
			vRP.giveInventoryItem(user_id,"topazio",math.random(1),true)
		elseif parseInt(random) >= 31 and parseInt(random) <= 40 then
			vRP.giveInventoryItem(user_id,"rubi",math.random(3),true)
		elseif parseInt(random) >= 21 and parseInt(random) <= 30 then
			vRP.giveInventoryItem(user_id,"ametista",math.random(2),true)
		elseif parseInt(random) >= 11 and parseInt(random) <= 20 then
			vRP.giveInventoryItem(user_id,"safira",math.random(1),true)
		end

		vRP.upgradeStress(user_id,1)
		vRP.downgradeThirst(user_id,1)
		saveList[parseInt(goldminerId)] = nil
		TriggerClientEvent("vrp_sound:source",source,"takeThis",0.5)
		TriggerClientEvent("vrp_goldminer:updateGoldminerList",-1,saveList)
		TriggerClientEvent("vrp_goldminer:removeGoldminerBlips",-1,parseInt(goldminerId))
	end
end